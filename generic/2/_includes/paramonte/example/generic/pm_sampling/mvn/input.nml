!   DESCRIPTION:
!
!       The external input file for sampling the 4-dimensional Multivariate Normal distribution function as implemented in the accompanying source files.
!       This file is common between all supported programming language environments.
!
!   NOTE:
!
!       All simulation specifications (including this whole file) are optional and can be nearly safely commented out.
!       However, if domain boundaries are finite, set them explicitly.
!
!   USAGE:
!
!       --  Comments must begin with an exclamation mark `!`.
!       --  Comments can appear anywhere on an empty line or, after a variable assignment
!           (but not in the middle of a variable assignment whether in single or multiple lines).
!       --  All variable assignments are optional and can be commented out. In such cases, appropriate default values will be assigned.
!       --  Use ParaDRAM namelist (group) name to group a set of ParaDRAM simulation specification variables.
!       --  The order of the input variables in the namelist groups is irrelevant and unimportant.
!       --  Variables can be defined multiple times, but only the last definition will be considered as input.
!       --  All variable names are case insensitive. However, for clarity, this software follows the camelCase code-writing practice.
!       --  String values must be enclosed with either single or double quotation marks.
!       --  Logical values are case-insensitive and can be either .true., true, or t for a TRUE value, and .false., false, or f for a FALSE value.
!       --  All vectors and arrays in the input file begin with index 1. This is following the convention of
!           the majority of science-oriented programming languages: Fortran, Julia, Mathematica, MATLAB, and R.
!
!      For comprehensive guidelines on the input file organization and rules, visit:
!
!           https://www.cdslab.org/paramonte/generic/latest/usage/sampling/paradram/input/
!
!      To see detailed descriptions of each of variables, visit:
!
!           https://www.cdslab.org/paramonte/generic/latest/usage/sampling/paradram/specifications/
!
&paradram

    ! Base specifications.

    description                             = "
This\n
    is a\n
        multi-line\n
            description.\\n"                                        ! strings must be enclosed with "" or '' and can be continued on multiple lines.
                                                                    ! No comments within strings are allowed.
    domain                                  = "cube"
    domainAxisName                          = "variable1"
                                              "variable2"           ! values can appear in multiple lines.
    domainBallCenter                        = 0 0 0 0               ! values can be separated with blanks or commas.
    domainBallCorMat                        = 1 0 0 0
                                              0 1 0 0
                                              0 0 1 0
                                              0 0 0 1
    domainBallCovMat                        = 1 0 0 0
                                              0 1 0 0
                                              0 0 1 0
                                              0 0 0 1
    domainBallStdVec                        = 1 1 1 1
    domainCubeLimitLower                    = 4*-1.e10              ! repetition pattern rules apply here. 4 dimensions => 4-element vector of values.
    domainCubeLimitUpper(1)                 = +1.e10                ! Elements of vectors can be set individually.
    domainCubeLimitUpper(2:4)               = 3*+1.e10              ! Elements of vectors can be set individually.
    domainErrCount                          = 100
    domainErrCountMax                       = 1000
    inputFileHasPriority                    = FALSE                 ! This is relevant only to simulations within the Fortran programming language.
    outputChainFileFormat                   = "compact"
   !outputColumnWidth                       = 25                    ! This is an example of a variable that is commented out.
                                                                    ! Therefore, its value will not be read by the sampler routine.
                                                                    ! To pass it to the routine, simply remove the `!` mark at the beginning of the line.
    outputFileName                          = "./out/mvn"           ! A forward-slash character at the end of the string value would indicate the specified path
                                                                    ! is to be interpreted as the name of the folder to contain the simulation output files.
                                                                    ! The base name for the simulation output files will be generated from the current date and time.
                                                                    ! Otherwise, the specified base name at the end of the string will be used in naming the simulation output files.
    outputPrecision                         = 17
    outputReportPeriod                      = 1000
    outputRestartFileFormat                 = "ascii"
    outputSampleSize                        = -1
    outputSeparator                         = ","
    outputSplashMode                        = "normal"              ! or quiet or silent.
    outputStatus                            = "retry"               ! or extend.
    parallelism                             = "multi chain"         ! "singleChain" would also work. Similarly, "multichain", "multi chain", or "multiChain".
    parallelismMpiFinalizeEnabled           = false                 ! TRUE, true, .true., .t., and t would be also all valid logical values representing truth.
    parallelismNumThread                    = 3                     ! number of threads to use in shared-memory parallelism.
   !randomSeed                              = 2136275,
   !targetAcceptanceRate                    = 0.23e0

    ! MCMC specifications.

    outputChainSize                         = 10000
    outputSampleRefinementCount             = 10
    outputSampleRefinementMethod            = "BatchMeans"
    proposal                                = "normal"              ! or "uniform" as you wish.
    proposalCorMat(:, 1)                    = 1 0 0 0               ! first matrix column.
    proposalCorMat(:, 2:4)                  = 0 1 0 0
                                              0 0 1 0
                                              0 0 0 1               ! other matrix columns.
    proposalCovMat                          = 1 0 0 0
                                              0 1 0 0
                                              0 0 1 0
                                              0 0 0 1               ! or specify all matrix elements in one statement.
    proposalScaleFactor                     = "2*0.5*Gelman"        ! The asterisk here means multiplication since it is enclosed within quotation marks.
   !proposalStart                           = 4*1.e0                ! four values of 1.e0 are specified here by the repetition pattern symbol *
    proposalStartDomainCubeLimitLower       = 4*-10.e0              ! repetition pattern rules apply again here. 4 dimensions => 4-element vector of values.
    proposalStartDomainCubeLimitUpper       = 4*+10.e0              ! repetition pattern rules apply again here. 4 dimensions => 4-element vector of values.
    proposalStartRandomized                 = false
    proposalStdVec                          = 4*1.0                 ! repetition pattern rules apply again here. 4 dimensions => 4-element vector of values.

    ! DRAM specifications.

    burninAdaptationMeasure                 = 1.
    proposalAdaptationCount                 = 10000000
    proposalAdaptationCountGreedy           = 0
    proposalAdaptationPeriod                = 35
    proposalDelayedRejectionCount           = 5
    proposalDelayedRejectionScaleFactor     = 4*1., 2.              ! The first four elements are 1, followed by 2.

/
